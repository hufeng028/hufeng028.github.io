<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hufeng028.github.io</id>
    <title>一念觀心</title>
    <updated>2020-07-06T07:03:18.955Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hufeng028.github.io"/>
    <link rel="self" href="https://hufeng028.github.io/atom.xml"/>
    <subtitle>凡事有交代，件件有着落，事事有回音。</subtitle>
    <logo>https://hufeng028.github.io/images/avatar.png</logo>
    <icon>https://hufeng028.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 一念觀心</rights>
    <entry>
        <title type="html"><![CDATA[01 | 高并发系统：它的通用设计方法是什么？]]></title>
        <id>https://hufeng028.github.io/01-or-gao-bing-fa-xi-tong-ta-de-tong-yong-she-ji-fang-fa-shi-shi-me/</id>
        <link href="https://hufeng028.github.io/01-or-gao-bing-fa-xi-tong-ta-de-tong-yong-she-ji-fang-fa-shi-shi-me/">
        </link>
        <updated>2020-07-06T06:27:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="应对高并发大流量三种方法">应对高并发大流量三种方法：</h3>
<ol>
<li><strong>Scale-out（横向扩展）：</strong> 采用分布式部署的方式把流量分流开，让每个服务器承担一部分并发和流量。</li>
<li><strong>缓存：</strong> 使用缓存来提高系统的性能。</li>
<li><strong>异步</strong> 在某些场景下，未处理完让请求先返回，数据准备好之后，再通知请求方。</li>
</ol>
<h3 id="scale-up-vs-scale-out">Scale-up vs Scale-out</h3>
<p><strong>Scale-up（纵向扩展）：</strong> 通过购买性能更好的硬件来提升系统的并发处理能力。<em>操作简单，但单机有极限</em><br>
**Scale-out（横向扩展）：突破单机极限，系统设计更复杂。</p>
<h3 id="使用缓存提升性能">使用缓存提升性能</h3>
<h3 id="异步处理">异步处理</h3>
<p><strong>异步</strong>是一种常见的高并发设计方法。</p>
<h3 id="系统演进过程应该遵循的思路">系统演进过程应该遵循的思路：</h3>
<ul>
<li>最简单的系统设计满足业务需求和流量现状，选择最熟悉的技术体系。</li>
<li>选择社区成熟的、团队熟悉的组件帮助我们解决问题，在没有合适的解决方案的前提下才会自己造轮子。</li>
<li>当对架构小修小补无法满足需求时，考虑重构、重写等大的调整方式解决现有问题。</li>
</ul>
<blockquote>
<p>高并发系统的演进应该是循序渐进，以解决系统中存在的问题为目的和驱动力的。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[22 | MySQL有哪些“饮鸩止渴”提高性能的方法？]]></title>
        <id>https://hufeng028.github.io/22-or-mysql-you-na-xie-yin-zhen-zhi-ke-ti-gao-xing-neng-de-fang-fa/</id>
        <link href="https://hufeng028.github.io/22-or-mysql-you-na-xie-yin-zhen-zhi-ke-ti-gao-xing-neng-de-fang-fa/">
        </link>
        <updated>2020-07-04T15:06:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="短连接风暴">短连接风暴</h3>
<ul>
<li>参数<code>max_connections</code>控制MySQL实例同时存在的连接数上限。<br>
短连接模型风险，数据库处理得慢一些，连接数就会暴涨。就可能超过<code>max_connections</code>的限制。</li>
</ul>
<p>有损解决方法：</p>
<h4 id="1-先处理掉那些占着连接但不工作的线程">1. 先处理掉那些占着连接但不工作的线程</h4>
<ul>
<li>踢掉<code>show processlist</code>的结果里显示为Sleep的线程，可能是有损的。<br>
<img src="https://hufeng028.github.io/post-images/1593877304450.png" alt="" loading="lazy"></li>
<li>结合<code>information_schema</code>库的<code>innodb_trx</code>表<br>
<img src="https://hufeng028.github.io/post-images/1593876203189.png" alt="" loading="lazy"></li>
</ul>
<blockquote>
<p>结果里<code>trx_mysql_thread_id = 4</code>，标识<code>id = 4</code>的线程还处在事务中。</p>
</blockquote>
<ul>
<li>服务器端断开连接使用<code>kill connection + id</code>命令</li>
</ul>
<blockquote>
<p>优先断开事务外空闲太久的连接，如果不够，再考虑断开事务空闲太久的连接。</p>
</blockquote>
<h4 id="2-减少连接过程的消耗">2. 减少连接过程的消耗</h4>
<p>重启数据库，并使用<code>--skip-grant-tables</code>参数，让整个MySQL跳过所有的权限验证，包括连接过程和语句执行过程在内。</p>
<blockquote>
<p>MySQL 8.0，当启用<code>--skip-grant-tables</code>参数，MySQL会默认把<code>--skip-networking</code>参数打开，使数据库只能被本地的客户端连接。</p>
</blockquote>
<h3 id="慢查询性能问题">慢查询性能问题</h3>
<h4 id="1-索引没设计好">1. 索引没设计好</h4>
<p>紧急创建索引来解决。</p>
<blockquote>
<p>一主一备（A主，B备）执行流程：<br>
第一步：备库B上执行<code>set sql_log_bin=off</code>，关闭binlog，执行<code>alter table ...</code>语句添加索引<br>
第二步：执行主备切换<br>
第三步：备库A上执行<code>set sql_log_bin=off</code>，关闭binlog，执行<code>alter table ...</code>语句添加索引</p>
</blockquote>
<h4 id="2-sql语句没写好">2. SQL语句没写好</h4>
<p>查询重写：使用存储过程<code>call query_rewrite.flush_rewrite_rules()</code>，让新规则生效。</p>
<pre><code class="language-mysql">
mysql&gt; insert into query_rewrite.rewrite_rules(pattern, replacement, pattern_database) values (&quot;select * from t where id + 1 = ?&quot;, &quot;select * from t where id = ? - 1&quot;, &quot;db1&quot;);

call query_rewrite.flush_rewrite_rules();
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://hufeng028.github.io/post-images/1593878319608.png" alt="" loading="lazy"></figure>
<ul>
<li>MySQL选错索引<br>
在语句上添加<code>force index</code></li>
</ul>
<blockquote>
<p>预先发现问题：</p>
<ol>
<li>上线前，在测试环境，打开慢查询日志（show log），并将<code>long_query_time</code>设置为0，确保每条语句都会被记录慢查询日志；</li>
<li>在测试表里插入模拟线上数据，做一遍回归测试；</li>
<li>观察慢查询日志里每类语句输出，特别留意<code>Rows_examined</code>字段是否与预期一致；</li>
</ol>
</blockquote>
<blockquote>
<p>检查所有SQL语句返回结果工具，<a href="https://www.percona.com/doc/percona-toolkit/3.0/pt-query-digest.html">pt-query-digest</a></p>
</blockquote>
<h3 id="qps突增问题">QPS突增问题</h3>
<blockquote>
<p>QPS（Query Per Second）意思是“每秒查询率”，是一台服务器每秒能够响应的查询次数，是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准，计算公式：QPS = 并发量 / 平均响应时间。</p>
</blockquote>
<ul>
<li>依赖规范的运维体系，虚拟化、白名单机制、业务账号分离来隔离或下线有bug业务。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[21 | 为什么我只改一行的语句，锁这么多？]]></title>
        <id>https://hufeng028.github.io/21-or-wei-shi-me-wo-zhi-gai-yi-xing-de-yu-ju-suo-zhe-me-duo/</id>
        <link href="https://hufeng028.github.io/21-or-wei-shi-me-wo-zhi-gai-yi-xing-de-yu-ju-suo-zhe-me-duo/">
        </link>
        <updated>2020-07-04T15:00:29.000Z</updated>
        <content type="html"><![CDATA[<p>...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[20 | 幻读是什么，幻读有什么问题？]]></title>
        <id>https://hufeng028.github.io/20-or-huan-du-shi-shi-me-huan-du-you-shi-me-wen-ti/</id>
        <link href="https://hufeng028.github.io/20-or-huan-du-shi-shi-me-huan-du-you-shi-me-wen-ti/">
        </link>
        <updated>2020-07-04T14:59:32.000Z</updated>
        <content type="html"><![CDATA[<p>...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[19 | 为什么我只查一行的语句，也执行这么慢？]]></title>
        <id>https://hufeng028.github.io/19-or-wei-shi-me-wo-zhi-cha-yi-xing-de-yu-ju-ye-zhi-xing-zhe-me-man/</id>
        <link href="https://hufeng028.github.io/19-or-wei-shi-me-wo-zhi-cha-yi-xing-de-yu-ju-ye-zhi-xing-zhe-me-man/">
        </link>
        <updated>2020-07-04T14:58:49.000Z</updated>
        <content type="html"><![CDATA[<p>...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[18 | 为什么这些SQL语句逻辑相同，性能却差异巨大？]]></title>
        <id>https://hufeng028.github.io/18-or-wei-shi-me-zhe-xie-sql-yu-ju-luo-ji-xiang-tong-xing-neng-que-chai-yi-ju-da/</id>
        <link href="https://hufeng028.github.io/18-or-wei-shi-me-zhe-xie-sql-yu-ju-luo-ji-xiang-tong-xing-neng-que-chai-yi-ju-da/">
        </link>
        <updated>2020-07-04T14:58:18.000Z</updated>
        <content type="html"><![CDATA[<p>...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[17 | 如何正确地显示随机消息？]]></title>
        <id>https://hufeng028.github.io/17-or-ru-he-zheng-que-di-xian-shi-sui-ji-xiao-xi/</id>
        <link href="https://hufeng028.github.io/17-or-ru-he-zheng-que-di-xian-shi-sui-ji-xiao-xi/">
        </link>
        <updated>2020-07-04T14:57:48.000Z</updated>
        <content type="html"><![CDATA[<p>...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[16 | “order by”是怎么工作的？]]></title>
        <id>https://hufeng028.github.io/16-or-order-byshi-zen-me-gong-zuo-de/</id>
        <link href="https://hufeng028.github.io/16-or-order-byshi-zen-me-gong-zuo-de/">
        </link>
        <updated>2020-07-04T14:57:15.000Z</updated>
        <content type="html"><![CDATA[<p>...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[15 | 答疑文章（一）：日志和索引相关问题]]></title>
        <id>https://hufeng028.github.io/15-or-da-yi-wen-zhang-yi-ri-zhi-he-suo-yin-xiang-guan-wen-ti/</id>
        <link href="https://hufeng028.github.io/15-or-da-yi-wen-zhang-yi-ri-zhi-he-suo-yin-xiang-guan-wen-ti/">
        </link>
        <updated>2020-07-04T14:56:35.000Z</updated>
        <content type="html"><![CDATA[<p>...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[14 | count(*)这么慢，我该怎么办？]]></title>
        <id>https://hufeng028.github.io/14-or-countzhe-me-man-wo-gai-zen-me-ban/</id>
        <link href="https://hufeng028.github.io/14-or-countzhe-me-man-wo-gai-zen-me-ban/">
        </link>
        <updated>2020-07-04T14:55:52.000Z</updated>
        <content type="html"><![CDATA[<p>...</p>
]]></content>
    </entry>
</feed>